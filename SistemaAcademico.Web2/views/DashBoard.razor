@page "/"
@inject NavigationManager NavigationManager

<PageTitle>Dashboard</PageTitle>

<h3>Dashboard do Sistema Acadêmico</h3>

<div class="row">
    <div class="col-md-4">
        <div class="card text-white bg-primary mb-3">
            <div class="card-header">Total de Alunos</div>
            <div class="card-body">
                <h4 class="card-title">@TotalAlunos</h4>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="card text-white bg-success mb-3">
            <div class="card-header">Total de Cursos</div>
            <div class="card-body">
                <h4 class="card-title">@TotalCursos</h4>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="card text-white bg-info mb-3">
            <div class="card-header">Total de Professores</div>
            <div class="card-body">
                <h4 class="card-title">@TotalProfessores</h4>
            </div>
        </div>
    </div>
</div>

<div class="row mt-4">
    <div class="col-md-6">
        <LineChart TItem="double" @ref="lineChart" Style="height: 300px;" />
    </div>

    <div class="col-md-6">
        <PieChart TItem="double" @ref="pieChart" Style="height: 300px;" />
    </div>
</div>

@code {
    private LineChart<double> lineChart;
    private PieChart<double> pieChart;

    // Simulando dados, você pode trocar para carregar da API
    private int TotalAlunos = 250;
    private int TotalCursos = 15;
    private int TotalProfessores = 30;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await SetupLineChart();
            await SetupPieChart();
        }
    }

    private async Task SetupLineChart()
    {
        var lineChartDataset = new LineChartDataset<double>
        {
            Label = "Alunos por semestre",
            Data = new List<double> { 50, 80, 120, 150, 200, 250 },
            Fill = true,
            BackgroundColor = "rgba(54, 162, 235, 0.2)",
            BorderColor = "rgba(54, 162, 235, 1)",
            // Tension = 0.4
        };

        await lineChart.Clear();

        await lineChart.AddLabelsDatasetsAndUpdate(
            new[] { "Sem 1", "Sem 2", "Sem 3", "Sem 4", "Sem 5", "Sem 6" },
            lineChartDataset
        );
    }

    private async Task SetupPieChart()
    {
        var pieChartDataset = new PieChartDataset<double>
        {
            Label = "Distribuição de Cursos",
            Data = new List<double> { 30, 50, 20 },
            BackgroundColor = new List<string>
            {
                "rgba(255, 99, 132, 0.6)",
                "rgba(54, 162, 235, 0.6)",
                "rgba(255, 206, 86, 0.6)"
            },
            HoverOffset = 10
        };

        await pieChart.Clear();

        await pieChart.AddLabelsDatasetsAndUpdate(
            new[] { "Tecnologia", "Engenharia", "Artes" },
            pieChartDataset
        );
    }
}