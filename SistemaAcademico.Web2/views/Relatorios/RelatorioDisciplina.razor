@page "/RendimentoPorDisciplina"
@inject RelatorioAPI RelatorioAPI

<MudPaper Class="p-6">
    <MudText Typo="Typo.h5" Color="Color.Primary" Class="mb-4">
        Relatório de Rendimento por Disciplina
    </MudText>

    @if (Relatorio == null)
    {
        <MudProgressCircular Indeterminate="true" />
    }
    else if (!Relatorio.Any())
    {
        <MudText>Nenhum dado encontrado.</MudText>
    }
    else
    {
        <MudTable Items="@Relatorio" Dense="true" Class="mb-6">
            <HeaderContent>
                <MudTh>Disciplina</MudTh>
                <MudTh>Média</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd>@context.NomeDisciplina</MudTd>
                <MudTd>@context.Media.ToString("0.00")</MudTd>
            </RowTemplate>
        </MudTable>

        <MudChart ChartType="MudBlazor.ChartType.Bar" Class="w-full h-96" Labels="@DisciplinaLabels" Datasets="@Datasets" />
    }
</MudPaper>

@code {
    private List<RendimentoDisciplinaResponse> Relatorio = new();
    private string[] DisciplinaLabels = Array.Empty<string>();
    private List<ChartSeries> Datasets = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var resultado = await RelatorioAPI.GetMediaNotasPorDisciplina();
            Relatorio = resultado?.ToList() ?? new();

            DisciplinaLabels = Relatorio.Select(r => r.NomeDisciplina).ToArray();

   Datasets = new List<ChartSeries>
{
    new ChartSeries
    {
        Name = "Média",
        Data = Relatorio.Select(r => r.Media).ToArray()
    }
};
        }
        catch (Exception ex)
        {
            Console.WriteLine("Erro ao carregar relatório: " + ex.Message);
        }
    }
}
